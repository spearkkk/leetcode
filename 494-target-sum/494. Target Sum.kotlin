class Solution {
    fun findTargetSumWays(nums: IntArray, target: Int): Int {
        val dp: MutableMap<Pair<Int, Int>, Int> = mutableMapOf()
        
        fun helper(target: Int, idx: Int): Int {
            if (idx == 0) {
                var cnt = 0
                if (target == nums[0]) {
                    cnt += 1
                }
                if (target == -nums[0]) {
                    cnt += 1
                }
                return cnt
            }
            if (dp.containsKey(Pair(target, idx))) {
                return dp[Pair(target, idx)]!!
            }
            val count = helper(target - nums[idx], idx - 1) + helper(target + nums[idx], idx - 1)
            dp[Pair(target, idx)] = count
            return count
        }

        return helper(target, nums.size - 1)
    }
}